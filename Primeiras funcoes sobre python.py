# -*- coding: utf-8 -*-
"""Tipos de Variáveis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SjbnAXylwzuH6r_fA1KToyBWinRioyZa

# Tipos de Variáveis em Python

Uma variável é um objeto, afinal tudo é um objeto em Python

int -> inteiro<br>
string -> texto<br>
float -> números com casas decimais (ponto flutuante)<br>
bool ou boolean -> True ou False<br>

Obs: Variáveis em Python não são declaradas explicitamente, mas isso não significa que você deve ficar mudando o tempo todo

Obs2: Cuidado com os nomes restritos (arquivo para Download)
"""

faturamento = 1000
custo = 500
lucro = (faturamento - custo)
print("O Faturamento é: " + str(faturamento))
print("O Custo da loja foi: " + str(custo))
print("O Faturamento total é de: " + str(lucro))

# Porém, para facilitar a utilização e manejo das variáveis usa-se os caracteres { } e sintaxe .format (string/int)
# Ou seja:

print("O Faturamento da loja foi: {}. O Custo da loja foi: {}. E o faturamento total da loja foi: {}".format(faturamento,custo,lucro))

# Utilização de F-string:
# F-STRING :
# A utilização do .format facilita o uso das variáveis dentro do texto/print a ser exibido.
# Porém para facilitar ainda mais o uso dessa função de "concatenate" podemos utilizar o F-tring
# Basta apenas colocar o caractere F antes do texto a ser exibido.
# Ou seja:

print(f"O Faturamento da loja foi: {faturamento}. O Custo da loja foi: {custo}. Logo o Faturamento total da loja foi de: {lucro}.")

# Esse método facilida a leitura e também abre uma gama de utilidades já que é possivel fazer contas dentro das chaves.
# Ou seja, também é possivel inserir funções dentro das chaves visando resutados diferentes.
# Segue o exemplo abaixo:

print(f"O Faturamento da loja foi: {faturamento}. O Custo da loja foi: {custo}. Logo o Faturamento total da loja foi de: {faturamento - custo}.")



